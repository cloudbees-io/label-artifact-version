apiVersion: automation.cloudbees.io/v1alpha1
kind: action
name: 'Label artifact version'
description: 'Add or remove label(s) to an existing artifact version.'

inputs:
  component-id:
    description: 'The ID of the component that the artifact belongs to.'
    required: true
  artifact-id:
    description: 'The unique identifier of the artifact.'
    required: true
  labels:
    description: 'A comma-separated list of artifact labels. If the list is empty, and the operation is "REPLACE", all the existing labels will be removed.'
    required: false
  operation:
    description: 'The type of action to be performed with labels of an artifact. "ADD", "REMOVE" or "REPLACE" are options available. "REPLACE" is used as default value.'

runs:
  using: composite
  steps:
    - id: labelArtifactVersion
      name: Label Artifact Version
      uses: docker://esolang/jq:latest
      run: |
        #Create payload
        echo '{ "component_id": "'"$INPUT_COMPONENT_ID"'", "artifact_id": "'"$INPUT_ARTIFACT_ID"'", ' > /tmp/payload.json 

         # convert to JSON format
         formatted_labels=$(echo "$INPUT_LABELS" | sed -e 's/[][]//g' | awk -v RS=, -v ORS=, '{ gsub(/^[ \t\r\n]+|[ \t\r\n]+$/, "");  gsub(/\\"/, "\\\\\""); gsub(/"/, "\\\""); printf "\"%s\",", $0 }' | sed 's/,$//' | sed 's/^/[/; s/$/]/')
         echo ' "labels": '"$formatted_labels">> /tmp/payload.json
        
        # operation argument is optional
        if [ -n "$INPUT_OPERATION" ]; then
          echo ', "operation": "'"$INPUT_OPERATION"'"' >> /tmp/payload.json
        else
          echo ', "operation": "'"REPLACE"'"' >> /tmp/payload.json
        fi
        
        echo ' }' >> /tmp/payload.json
        
        # Make Platform API call to create label records for artifact info
        response=$(curl --fail-with-body  -X 'PUT' "$URL/v3/components/$INPUT_COMPONENT_ID/artifactinfos/$INPUT_ARTIFACT_ID/labels" \
          -H "Authorization: Bearer $JWT" -H "Content-Type: application/json" \
          --data-binary '@/tmp/payload.json') || command_failed=1
       
        # Check curl exit code
        if [ ${command_failed:-0} -eq 1 ];
        then
          echo "Platform API call failed with error: '$response'"
          exit 1
        fi
      env:
        JWT: ${{ cloudbees.api.token }}
        URL: ${{ cloudbees.api.url }}
        INPUT_ARTIFACT_ID: ${{ inputs.artifact-id }}
        INPUT_COMPONENT_ID: ${{ inputs.component-id }}
        INPUT_LABELS: ${{ inputs.labels }}
        INPUT_OPERATION: ${{ inputs.operation }}

