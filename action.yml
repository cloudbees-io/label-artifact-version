apiVersion: automation.cloudbees.io/v1alpha1
kind: action
name: 'Label artifact version'
description: 'Add or remove label(s) to an existing artifact version.'

inputs:
  artifact-id:
    description: 'The unique identifier of the artifact.'
    required: true
  labels:
    description: 'A comma-separated list of artifact labels. If the list is empty, and the operation is "REPLACE", all the existing labels will be removed.'
    required: true
  operation:
    description: 'The type of action to be performed with labels of an artifact. "ADD" and "REMOVE" are options available. "ADD" is used as default value.'
    default: ADD

runs:
  using: composite
  steps:
    - id: labelArtifactVersion
      name: Label Artifact Version
      uses: docker://esolang/jq:latest
      run: |
        # Set default operation to ADD if not provided
        OPERATION=${INPUT_OPERATION:-ADD}

        # Create payload (without operation)
        echo '{ "artifact_id": "'"$INPUT_ARTIFACT_ID"'", ' > /tmp/payload.json
        formatted_labels=$(echo "$INPUT_LABELS" | sed -e 's/[][]//g' | awk -v RS=, -v ORS=, '{ gsub(/^[ \t\r\n]+|[ \t\r\n]+$/, "");  gsub(/\\"/, "\\\\\""); gsub(/"/, "\\\""); printf "\"%s\",", $0 }' | sed 's/,$//' | sed 's/^/[/; s/$/]/')
        echo ' "labels": '"$formatted_labels"' }' >> /tmp/payload.json

        # Perform API call based on operation
        if [ "$OPERATION" = "ADD" ]; then

          # POST request to add labels
          response=$(curl --fail-with-body -X 'POST' "$URL/v3/artifactinfos/$INPUT_ARTIFACT_ID/labels" \
            -H "Authorization: Bearer $JWT" -H "Content-Type: application/json" \
            --data-binary '@/tmp/payload.json') || command_failed=1
        else # If operation is REMOVE

          # Convert comma-separated labels to encoded query string
          label_query=""
          IFS=',' read -ra LABELS <<< "$INPUT_LABELS"
          for label in "${LABELS[@]}"; do
            # Remove leading/trailing whitespace and encode spaces as %20:
            label_trimmed=$(echo "$label" | xargs)
            label_encoded=$(echo "$label_trimmed" | sed 's/ /%20/g')
            
            if [ -n "$label_query" ]; then
              label_query+="&"
            fi
            
            label_query+="labels=$label_encoded"
          done
          
          echo "final label_query=$label_query"
        
           # DELETE request to remove labels (labels as encoded query param)
          response=$(curl --fail-with-body -X 'DELETE' "$URL/v3/artifactinfos/$INPUT_ARTIFACT_ID/labels?$label_query" \
            -H "Authorization: Bearer $JWT" -H "Content-Type: application/json") || command_failed=1
        fi

        # Check curl exit code
        if [ ${command_failed:-0} -eq 1 ]; then
          echo "Platform API call failed with error: '$response'"
          exit 1
        fi
      env:
        JWT: ${{ cloudbees.api.token }}
        URL: ${{ cloudbees.api.url }}
        INPUT_ARTIFACT_ID: ${{ inputs.artifact-id }}
        INPUT_LABELS: ${{ inputs.labels }}
        INPUT_OPERATION: ${{ inputs.operation }}
